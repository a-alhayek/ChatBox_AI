/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatbox;


import java.util.regex.Matcher;
import java.util.regex.Pattern;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import respond.Respond;

/**
 *
 * @author ahmadalhayek
 */
public class ChatBox extends javax.swing.JFrame implements KeyListener
{
    @Override
    public void keyTyped( KeyEvent e )
    {
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed( KeyEvent e )
    {

    }

    @Override
    public void keyReleased( KeyEvent e )
    {
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /** Creates new form ChatBox */
    public ChatBox()
    {
        initComponents();
        if ( !start )
        {
            messagingArea.append("HelpDesk:\n" + ( "Hi, welcome to online IT-Help desk." ) + "\n\n");
            start = true;
        }
       

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        textField = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        messagingArea = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IT-Help Desk");

        textField.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textFieldKeyPressed(evt);
            }
        });

        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sendActionPerformed(evt);
            }
        });

        messagingArea.setEditable(false);
        messagingArea.setColumns(20);
        messagingArea.setRows(5);
        jScrollPane2.setViewportView(messagingArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_sendActionPerformed
    {//GEN-HEADEREND:event_sendActionPerformed
        // TODO add your handling code here:

        sendButton();
    }//GEN-LAST:event_sendActionPerformed

    private void textFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textFieldKeyPressed
    {//GEN-HEADEREND:event_textFieldKeyPressed
        // TODO add your handling code here:
        if ( evt.getKeyCode() == KeyEvent.VK_ENTER )
        {
            sendButton();
        }
    }//GEN-LAST:event_textFieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and
         * feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.
              getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals(info.getName()) )
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ChatBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea messagingArea;
    private javax.swing.JButton send;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
    private Respond respond = new Respond();
    private boolean start = false;

    private void sendButton()
    {

        String userInput = textField.getText().toLowerCase();
        userInput = userInputPreprossesing(userInput);
        messagingArea.append("You:\n" + textField.getText() + "\n\n");
        textField.setText(null);
        messagingArea.append("HelpDesk:\n" + respond.call(userInput) + "\n\n");
        jScrollPane2.setAlignmentY(TOP_ALIGNMENT);

    }

    private String userInputPreprossesing( String userInput )
    {
        String regex = "[^a-zA-Z0-9\\s$]";// regex that takes only 
        Pattern pt = Pattern.compile(regex); // regex to remove spical chars
        Matcher match = pt.matcher(userInput);
        while ( match.find() )
        {
            String s = match.group();
            userInput = userInput.replaceAll("\\" + s, "");//replacing spacial chars with empty string
        }
        //System.out.println("userInput:" + userInput); DEBUGING LINE TO CHECK WHAT CHANGED IN USERINPUT AFTER REGEX
        return userInput;
    }

}
